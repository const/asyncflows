<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="AsyncObjects Rules"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>
        The rules for asyncobjects.
    </description>

    <rule ref="rulesets/java/android.xml"/>
    <rule ref="rulesets/java/basic.xml"/>
    <rule ref="rulesets/java/braces.xml"/>
    <rule ref="rulesets/java/clone.xml"/>
    <rule ref="rulesets/java/codesize.xml">
        <exclude name="TooManyMethods"/>
        <exclude name="CyclomaticComplexity"/>
        <exclude name="ModifiedCyclomaticComplexity"/>
        <exclude name="StdCyclomaticComplexity"/>
    </rule>
    <rule ref="rulesets/java/comments.xml">
        <exclude name="CommentSize"/>
        <exclude name="CommentRequired"/>
        <!-- it does not understands override -->

    </rule>
    <rule ref="rulesets/java/controversial.xml">
        <exclude name="DataflowAnomalyAnalysis"/>
        <exclude name="CallSuperInConstructor"/>
        <exclude name="OnlyOneReturn"/>
        <exclude name="AvoidFinalLocalVariable"/>
        <exclude name="NullAssignment"/>
        <exclude name="BooleanInversion"/>
        <exclude name="AvoidLiteralsInIfCondition"/>
        <exclude name="AtLeastOneConstructor"/>
    </rule>
    <rule ref="rulesets/java/coupling.xml">
        <exclude name="LawOfDemeter"/>
        <exclude name="LoosePackageCoupling"/>
        <exclude name="ExcessiveImports"/>
    </rule>
    <rule ref="rulesets/java/design.xml">
        <exclude name="ConfusingTernary"/>
        <exclude name="AccessorClassGeneration"/>
    </rule>
    <rule ref="rulesets/java/empty.xml"/>
    <rule ref="rulesets/java/finalizers.xml"/>
    <rule ref="rulesets/java/imports.xml">
        <exclude name="TooManyStaticImports"/>
    </rule>
    <!-- <rule ref="rulesets/java/j2ee.xml"/> -->
    <rule ref="rulesets/java/javabeans.xml">
        <exclude name="BeanMembersShouldSerialize"/>
    </rule>
    <rule ref="rulesets/java/junit.xml">
        <exclude name="JUnitAssertionsShouldIncludeMessage"/>
        <exclude name="JUnitTestContainsTooManyAsserts"/>
        <exclude name="UseAssertTrueInsteadOfAssertEquals"/>
    </rule>
    <rule ref="rulesets/java/logging-jakarta-commons.xml"/>
    <rule ref="rulesets/java/logging-java.xml"/>
    <rule ref="rulesets/java/migrating.xml"/>
    <rule ref="rulesets/java/naming.xml">
        <exclude name="ShortVariable"/>
        <exclude name="GenericsNaming"/>
        <exclude name="ShortClassName"/>
        <exclude name="AvoidFieldNameMatchingTypeName"/>
        <exclude name="AbstractNaming"/>
        <exclude name="LongVariable"/>
        <exclude name="ShortMethodName"/>
        <exclude name="AvoidFieldNameMatchingMethodName"/>
    </rule>
    <rule ref="rulesets/java/optimizations.xml"/>
    <rule ref="rulesets/java/strictexception.xml">
        <exclude name="AvoidCatchingThrowable"/>
        <exclude name="SignatureDeclareThrowsException"/>
    </rule>
    <rule ref="rulesets/java/strings.xml">
        <exclude name="AvoidDuplicateLiterals"/>
        <exclude name="ConsecutiveLiteralAppends"/>
    </rule>
    <rule ref="rulesets/java/sunsecure.xml"/>
    <rule ref="rulesets/java/typeresolution.xml">
        <exclude name="SignatureDeclareThrowsException"/>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml"/>
    <rule ref="rulesets/java/unusedcode.xml"/>

</ruleset>